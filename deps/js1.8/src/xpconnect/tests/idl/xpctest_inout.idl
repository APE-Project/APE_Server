/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   John Bandhauer <jband@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 *	Test the 'inout' keyword.
 */

#include "nsISupports.idl"

[scriptable, uuid(626dc196-5599-11d3-82ef-0060b0eb596f)]
interface nsIXPCTestInOut : nsISupports {
	void EchoLong( in long li, out long lo);
	void EchoShort( in short si, out short so );
	void EchoChar( in char ci, out char co );
	void EchoBoolean( in boolean bi, out boolean bo );
	void EchoOctet( in octet oi, out octet oo );
	void EchoLongLong( in long long lli, out long long llo );
	void EchoUnsignedShort( in unsigned short usi, out unsigned short uso );
	void EchoUnsignedLong(  in unsigned long uli, out unsigned long ulo);
	void EchoFloat( in float fi, out float fo);
	void EchoDouble( in double di, out double dout );
	void EchoWchar ( in wchar wci, out wchar wco );
	void EchoString( in wstring wsi, out wstring wso );
	void EchoPRBool( in PRBool bi, out PRBool bo );
	void EchoPRInt32( in PRInt32 li, out PRInt32 lo );
	void EchoPRInt16( in PRInt16 li, out PRInt16 lo );
	void EchoPRInt64( in PRInt64 ii, out PRInt64 io );
	void EchoPRUint8( in PRUint8 ii, out PRUint8 io );
	void EchoPRUint16( in PRUint16 ii, out PRUint16 io );
	void EchoPRUint32( in PRUint32 ii, out PRUint32 io );
	void EchoPRUint32_2( in PRUint32 ii, out PRUint32 io );
	void EchoPRUint64( in PRUint64 ii, out PRUint64 io );
	
	// native types must be marked noscript or they break the idl
	// compiler

	[noscript] void EchoVoidPtr( in voidPtr vsi, out voidPtr vso );
	[noscript] void EchoCharPtr( in charPtr csi, out charPtr cso );
	//[noscript] void EchoVoidRef( in voidRef vfi, out voidRef vfo );
	//[noscript] void EchoNsIDRef( in nsIDRef ri, out nsIDRef ro );
	//[noscript] void EchoNsCIDRef( in nsCIDRef ri, out nsCIDRef ro );

	[noscript] void EchoNsIDPtr( in nsIDPtr pi, out nsIDPtr po );
	[noscript] void EchoNsIIDPtr( in nsIIDPtr pi, out nsIIDPtr po );
	[noscript] void EchoNsCIDPtr( in nsCIDPtr pi, out nsCIDPtr po );
	[noscript] void EchoNsQIResult( in nsQIResult ri, out nsQIResult ro );

	void EchoVoid();
};
