/* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   John Bandhauer <jband@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 *	Test the 'in' keyword.
 */

#include "nsISupports.idl"

[scriptable, uuid(a3cab49d-ae83-4e63-a735-009b9a759204)]
interface nsIXPCTestIn : nsISupports {
	long    EchoLong( in long l);
	short   EchoShort( in short a );
	char	EchoChar( in char c );
	boolean EchoBoolean( in boolean b );
	octet   EchoOctet( in octet o );
	long long EchoLongLong( in long long ll );
	unsigned short EchoUnsignedShort( in unsigned short us );
	unsigned long  EchoUnsignedLong(  in unsigned long ul );
	float  EchoFloat( in float f );
	double EchoDouble( in double d );
	wchar  EchoWchar ( in wchar wc );
	wstring EchoString( in wstring ws );

	PRBool  EchoPRBool( in PRBool b );
	PRInt32 EchoPRInt32( in PRInt32 l );
	PRInt16 EchoPRInt16( in PRInt16 l );
	PRInt64 EchoPRInt64( in PRInt64 i );
	PRUint8 EchoPRUint8( in PRUint8 i );
	PRUint16 EchoPRUint16( in PRUint16 i );
	PRUint32 EchoPRUint32( in PRUint32 i );
	PRUint32 EchoPRUint32_2( in PRUint32 i );
	PRUint64 EchoPRUint64( in PRUint64 i );
	
	// native types must be marked noscript or they break the idl
	// compiler

	[noscript] voidPtr EchoVoidPtr( in voidPtr vs );
	[noscript] charPtr EchoCharPtr( in charPtr cs );
/*
	[noscript] voidRef EchoVoidRef( in voidRef vf );
	[noscript] nsIDRef EchoNsIDRef( in nsIDRef r );
	[noscript] nsCIDRef EchoNsCIDRef( in nsCIDRef r );

	[noscript] nsIDPtr EchoNsIDPtr( in nsIDPtr p );
	[noscript] nsIIDPtr EchoNsIIDPtr( in nsIIDPtr p );
	[noscript] nsCIDPtr EchoNsCIDPtr( in nsCIDPtr p );
	[noscript] nsQIResult EchoNsQIResult( in nsQIResult r );
*/
	void EchoVoid();
};
